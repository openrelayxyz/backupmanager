orbs:
  aws-cli: circleci/aws-cli@1.0.0 #See: https://circleci.com/orbs/registry/orb/circleci/aws-cli

version: 2.1
jobs:
  build_push:
    docker: # run the steps with Docker
      - image: cimg/go:1.18.4 # ...with this image as the primary container
      # this is where all `steps` will run
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Prep env
          command: |
            mkdir -p /home/circleci/go/src
            go get
      - run:
          name: build image
          command: |
            export GOPATH=$HOME/go
            export GOARCH=amd64
            go build -o backupmanager-linux-amd64
            GOARCH=arm64 go build -o backupmanager-linux-arm64
      - aws-cli/setup: #See: https://circleci.com/orbs/registry/orb/circleci/aws-cli
          aws-access-key-id: ACCESS_KEY_ID
          aws-secret-access-key: SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      - run:
          name: push to s3
          command: aws s3 cp ./backupmanager-linux-amd64 s3://ethercattle-binaries/backupmanager/$CIRCLE_TAG/backupmanager-linux-amd64 --acl=public-read
      - run:
          name: push to s3 arm
          command: aws s3 cp ./backupmanager-linux-arm64 s3://ethercattle-binaries/backupmanager/$CIRCLE_TAG/backupmanager-linux-arm64 --acl=public-read
      - run:
          name: Message Slack
          command: |
              .circleci/slack-post.sh -w $SlackWebhook -m "*backupmanager*:\nTag: $CIRCLE_TAG"


workflows:
  version: 2
  build_and_test:
    jobs:
      # - test:
      #     filters:  # required since `deploy` has tag filters AND requires `build`
      #       tags:
      #         only: /.*/
      - build_push:
          # requires:
          #   - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
